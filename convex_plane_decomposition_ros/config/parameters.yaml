elevation_topic : '/elevation_mapping/elevation_map_raw'
height_layer : 'elevation'
submap:
  width: 3.0
  length: 3.0

preprocessing:
  kernelSize: 3       # Kernel size of the median filter
  numberOfRepeats: 3  # Number of times to apply the same filter
  increasing: True    # Increase the kernel size each iteration.
  inpaintRadius: 0.05 # [m]

sliding_window_plane_extractor:
  kernel_size: 3                                        # Size of the sliding window patch used for normal vector calculation and planarity detection. Should be an odd number and at least 3.
  plane_inclination_threshold_degrees: 45.0             # [deg] Maximum allowed angle between the surface normal and the world-z direction for a patch
  plane_patch_error_threshold: 0.005                    # [m] The allowed root-mean-squared deviation from the plane fitted to the sliding window.
  min_number_points_per_label: 10                       # [#] Labels with less points assigned to them are discarded
  connectivity: 4                                       # Label kernel connectivity. 4 or 8 (cross or box)
  include_ransac_refinement: true                       # Enable RANSAC refinement if the plane is not globally fitting to the assigned points.
  global_plane_fit_distance_error_threshold: 0.04       # [m] Allowed maximum distance from a point to the plane. If any point violates this, RANSAC is triggered
  global_plane_fit_angle_error_threshold_degrees: 5.0   # [deg] Allowed normal vector deviation for a point w.r.t. the plane normal. If any point violates this, RANSAC is triggered

ransac_plane_refinement:
  probability: 0.01       # Probability to miss the largest candidate shape. A lower probability provides a higher reliability and determinism at the cost of longer running times
  min_points: 25          # This minimum number of points per plane. Controls the termination of the algorithm.
  epsilon: 0.02           # Maximum distance to plane
  cluster_epsilon: 0.05   # Set maximum Euclidean distance between points to be clustered. Two points are connected if separated by a distance of at most 2*sqrt(2)*cluster_epsilon = 2.828 * cluster_epsilon
  normal_threshold: 0.98  # Set maximum normal deviation. normal_threshold < dot(surface_normal, point_normal);

contour_extraction:
  offsetSize: 2    # Size of the kernel creating the boundary offset. In number of pixels.

